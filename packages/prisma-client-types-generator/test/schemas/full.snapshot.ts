// This file was generated by a custom prisma generator, do not edit manually.
export type PostKeys = {
  id: number
  categoryId: number | null
  userId: string
}

export type PostValues = {
  createdAt: Date
  updatedAt: Date | null
  deletedAt: Date | null
  text: string
  publishAt: Date | null
  publishedAt: Date | null
}

export type PostRelations = {
  category: Category | null
  toMedia: PostToMedia[]
  tags: Tag[]
  user: User
}

export type Post = PostKeys & PostValues

export type PostExtended = Post & PostRelations

export type PostToMediaKeys = {
  id: number
  mediaId: number
  postId: number
}

export type PostToMediaValues = {
  createdAt: Date
}

export type PostToMediaRelations = {
  media: Media
  post: Post
}

export type PostToMedia = PostToMediaKeys & PostToMediaValues

export type PostToMediaExtended = PostToMedia & PostToMediaRelations

export type MediaKeys = {
  id: number
}

export type MediaValues = {
  url: string
  createdAt: Date
  updatedAt: Date | null
}

export type MediaRelations = {
  postToMedias: PostToMedia[]
}

export type Media = MediaKeys & MediaValues

export type MediaExtended = Media & MediaRelations

export type TagKeys = {
  id: number
}

export type TagValues = {
  name: string
  createdAt: Date
  updatedAt: Date | null
}

export type TagRelations = {
  posts: Post[]
}

export type Tag = TagKeys & TagValues

export type TagExtended = Tag & TagRelations

export type CategoryKeys = {
  id: number
  parentCategoryId: number | null
}

export type CategoryValues = {
  name: string
  createdAt: Date
  updatedAt: Date | null
}

export type CategoryRelations = {
  childrenCategories: Category[]
  parentCategory: Category | null
  Post: Post[]
}

export type Category = CategoryKeys & CategoryValues

export type CategoryExtended = Category & CategoryRelations

export type AccountKeys = {
  id: string
  userId: string
}

export type AccountValues = {
  type: string
  provider: string
  providerAccountId: string
  refresh_token: string | null
  access_token: string | null
  expires_at: number | null
  token_type: string | null
  scope: string | null
  id_token: string | null
  session_state: string | null
}

export type AccountRelations = {
  user: User
}

export type Account = AccountKeys & AccountValues

export type AccountExtended = Account & AccountRelations

export type SessionKeys = {
  id: string
  sessionToken: string
  userId: string
}

export type SessionValues = {
  expires: Date
}

export type SessionRelations = {
  user: User
}

export type Session = SessionKeys & SessionValues

export type SessionExtended = Session & SessionRelations

export type UserKeys = {
  id: string
  email: string | null
}

export type UserValues = {
  name: string | null
  emailVerified: Date | null
  image: string | null
  createdAt: Date
  updatedAt: Date | null
}

export type UserRelations = {
  post: Post[]
  accounts: Account[]
  sessions: Session[]
  settings: UserSettings | null
}

export type User = UserKeys & UserValues

export type UserExtended = User & UserRelations

export type UserSettingsKeys = {
  id: string
  userId: string
}

export type UserSettingsValues = {
  language: string
}

export type UserSettingsRelations = {
  user: User
}

export type UserSettings = UserSettingsKeys & UserSettingsValues

export type UserSettingsExtended = UserSettings & UserSettingsRelations

export type VerificationTokenKeys = {
  token: string
}

export type VerificationTokenValues = {
  identifier: string
  expires: Date
}

export type VerificationTokenRelations = {
}

export type VerificationToken = VerificationTokenKeys & VerificationTokenValues

export type VerificationTokenExtended = VerificationToken & VerificationTokenRelations

export type AdminUserKeys = {
  id: string
  email: string | null
}

export type AdminUserValues = {
  name: string | null
  emailVerified: Date | null
  image: string | null
  role: Role
}

export type AdminUserRelations = {
  audit: Audit[]
}

export type AdminUser = AdminUserKeys & AdminUserValues

export type AdminUserExtended = AdminUser & AdminUserRelations

export type AuditKeys = {
  id: string
  authorId: string | null
}

export type AuditValues = {
  date: Date
  resource: string
  action: string
  payload: any | null
}

export type AuditRelations = {
  author: AdminUser | null
}

export type Audit = AuditKeys & AuditValues

export type AuditExtended = Audit & AuditRelations

export const Role = {
  COLLABORATOR: 'COLLABORATOR',
  OWNER: 'OWNER',
  READER: 'READER',
} as const;

export type Role = (typeof Role)[keyof typeof Role]

